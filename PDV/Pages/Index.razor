@page "/"

@using PDV.Shared.Components
@using PDV.Data


<PageTitle>Index</PageTitle>

<h1>Distribuidora ACME</h1>

Bem vindo ao Ponto de Vendas.

@inject ProdutoService service
<div class="container">
    <div class="row bg-light">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Item</th>
                    <th>Nome</th>
                    <th>Descrição</th>
                    <th>Marca</th>
                    <th>Volume</th>
                    <th>Peso</th>
                    <th>Preço</th>
                    <th>Quantidade</th>
                    <th>Apaga Produto</th>
                </tr>
            </thead>
            <tbody>
                @if (Produtos.Any())
                {
                    @foreach (var produto in Produtos)
                    {
                        <tr @onclick="(() => SetProductForUpdate(produto))">
                            <td>@produto.Id</td>
                            <td>@produto.Nome</td>
                            <td>@produto.Descricao</td>
                            <td>@produto.Marca</td>
                            <td>@produto.Volume</td>
                            <td>@produto.Peso</td>
                            <td>@produto.Preco</td>
                            <td>@produto.Quantidade</td>
                            <td><button class="btn btn-danger" @onclick="(() => DeleteProduct(produto))">Apagar</button></td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="6"><strong>Não tem este Produto</strong></td></tr>
                }
            </tbody>
        </table>
    </div>
    <div class="row m-5">
        <div class="col-5 bg-light m-2 justify-content-start">
            <div class="p-3 mb-3 bg-primary text-white text-center">Adicione Novo Produto</div>
            <EditForm Model="@NewProduct">
                <div class="form-group">
                    <label for="name">Nome do Produto</label>
                    <input type="text" id="nome" class="form-control" @bind-value="@NewProduct.Nome" />
                </div>
                <div class="form-group">
                    <label for="price">Descrição</label>
                    <input type="text" id="descricao" class="form-control" @bind="@NewProduct.Descricao" />
                </div>
                <div class="form-group">
                    <label for="price">Marca</label>
                    <input type="text" id="marca" class="form-control" @bind="@NewProduct.Marca" />
                </div>
                <div class="form-group">
                    <label for="price">Volume</label>
                    <input type="text" id="volume" class="form-control" @bind="@NewProduct.Volume" />
                </div>
                <div class="form-group">
                    <label for="price">Peso</label>
                    <input type="text" id="peso" class="form-control" @bind="@NewProduct.Peso" />
                </div>
                <div class="form-group">
                    <label for="price">Preco</label>
                    <input type="text" id="preco" class="form-control" @bind="@NewProduct.Preco" />
                </div>
                <div class="form-group">
                    <label for="quantity">Quantidade</label>
                    <input type="text" id="quantidade" class="form-control" @bind="@NewProduct.Quantidade" />
                </div>
                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" @onclick="AddNewProduct"> Adicionar Produto</button>
                </div>
            </EditForm>
        </div>
        <div class="col-5 bg-light m-2 justify-content-end">
            <div class="p-3 mb-1 bg-primary text-white text-center">Update Product</div>
            <EditForm Model="@UpdateProduct">
                <div class="form-group">
                    <label for="name">Nome do Produto</label>
                    <input type="text" id="nome" class="form-control" @bind-value="@UpdateProduct.Nome" />
                </div>
                <div class="form-group">
                    <label for="price">Descrição</label>
                    <input type="text" id="descricao" class="form-control" @bind="@UpdateProduct.Descricao" />
                </div>
                <div class="form-group">
                    <label for="price">Marca</label>
                    <input type="text" id="marca" class="form-control" @bind="@UpdateProduct.Marca" />
                </div>
                <div class="form-group">
                    <label for="price">Volume</label>
                    <input type="text" id="volume" class="form-control" @bind="@UpdateProduct.Volume" />
                </div>
                <div class="form-group">
                    <label for="price">Peso</label>
                    <input type="text" id="peso" class="form-control" @bind="@UpdateProduct.Peso" />
                </div>
                <div class="form-group">
                    <label for="price">Preco</label>
                    <input type="text" id="preco" class="form-control" @bind="@UpdateProduct.Preco" />
                </div>
                <div class="form-group">
                    <label for="quantity">Quantidade</label>
                    <input type="text" id="quantidade" class="form-control" @bind="@UpdateProduct.Quantidade" />
                </div>
                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" @onclick="UpdateProductData"> Update Product</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>
@code {
    List<Produto> Produtos = new List<Produto>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshProducts();
    }
    private async Task RefreshProducts()
    {
        Produtos = await service.GetProdutosAsync();
    }
    public Produto NewProduct { get; set; } = new Produto();
    private async Task AddNewProduct()
    {
        await service.AddProdutoAsync(NewProduct);
        NewProduct = new Produto();
        await RefreshProducts();
    }
    Produto UpdateProduct = new Produto();
    private void SetProductForUpdate(Produto produto)
    {
        UpdateProduct = produto;
    }
    private async Task UpdateProductData()
    {
        await service.UpdateProdutoAsync(UpdateProduct);
        await RefreshProducts();
    }
    private async Task DeleteProduct(Produto produto)
    {
        await service.DeleteProdutoAsync(produto);
        await RefreshProducts();
    }
}

